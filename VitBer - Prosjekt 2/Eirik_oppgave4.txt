V04 = -1000
w4 = 2
b4 = 3
Nw = 50
L4 = 20*w4 + Nw*w4 + (Nw-1)*b4

V4 = np.ones(1) * inf
V4 = np.concatenate((V4,np.zeros(n*10*w4//L4)))

for i in range(Nw-1):
    V4 = np.concatenate((V4, V04 * np.ones(n*w4 // L4),np.zeros(n*b4//L4)))
V4 = np.concatenate((V4, V04 * np.ones(n*w4 // L4)))

V4 = np.concatenate((V4,np.zeros(n*int(10*w)//L4)))
V4 = np.concatenate((V4,np.ones(1) * inf))

n4 = len(V4)
x4 = np.linspace(0,L4,n4)
E4, phi4 = solveTUSL(V4, x4, n4-2)
l4 = 10
plotEigenfunc(phi4, V4, x4, l4)

for i in range(l4):
    print(E4[i])